-- input.json --
{
  "dependencies": [
    {
      "import": "myapp.com/web",
      "type": "*Web"
    }
  ],
  "externals": [
  ],
  "target": "myapp.com/gen/web"
}

-- expect.txt --
&web.Web{
  Blank: &web.Blank{},
  Database: &web.Database{DB: &db.DB{
    Env: &env.Env{},
    Log: &log.Log{Env: &env.Env{}},
  }},
  Env: &env.Env{},
  Users: &users.Controller{
    DB: &db.DB{
      Env: &env.Env{},
      Log: &log.Log{Env: &env.Env{}},
    },
    Env: &env.Env{},
  },
}

-- main.go --
package main

import (
  "os"
  "fmt"
  "github.com/hexops/valast"
  genweb "myapp.com/gen/web"
)

func main() {
  actual := genweb.Load()
  fmt.Fprintf(os.Stdout, "%s\n", valast.String(actual))
}

-- go.mod --
module myapp.com

require (
  github.com/hexops/valast v1.4.1
)

-- web/web.go --
package web

import (
  "myapp.com/db"
  "myapp.com/env"
  "myapp.com/users"
)

// Blank struct
type Blank struct {
  small string
}

// Database struct
type Database struct {
  *db.DB
}

// Web struct
type Web struct {
  *Blank
  *Database
  *env.Env
  Users *users.Controller
}

-- users/controller.go --
package users

import (
  "myapp.com/db"
  "myapp.com/env"
)

// Controller struct
type Controller struct {
  *db.DB
  Env *env.Env
}

-- log/log.go --
package log

import (
  "myapp.com/env"
)

// Log struct
type Log struct {
  *env.Env
}

-- env/env.go --
package env

// Env struct
type Env struct {}

-- db/db.go --
package db

import (
  "myapp.com/env"
  "myapp.com/log"
)

// DB Struct
type DB struct {
  Env *env.Env
  Log *log.Log
}

