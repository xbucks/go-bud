-- input.json --
{
  "dependencies": [
    {
      "import": "myapp.com/web",
      "type": "*Web"
    }
  ],
  "externals": [
  ],
  "target": "myapp.com/gen/web"
}

-- expect.txt --
env: unable to load environment

-- main.go --
package main

import (
  "os"
  "fmt"
  "github.com/hexops/valast"
  genweb "myapp.com/gen/web"
)

func main() {
  actual, err := genweb.Load()
  if err != nil {
    fmt.Fprintf(os.Stdout, "%s\n", err)
    return
  }
  fmt.Fprintf(os.Stdout, "%s\n", valast.String(actual))
}

-- go.mod --
module myapp.com

require (
  github.com/hexops/valast v1.4.1
)

-- env/env.go --
package env

import (
  "errors"
)

// New env
func New() (*Env, error) {
  return &Env{}, errors.New("env: unable to load environment")
}

// Env struct
type Env struct {
  LogLevel    string
  PostgresURL string
}

-- log/log.go --
package log

import (
  "myapp.com/env"
)

// Log struct
type Log struct {
  e *env.Env
}

// New Log
func New(e *env.Env) (*Log, error) {
  return &Log{e}, nil
}

-- web/web.go --
package web

import (
  "myapp.com/log"
)

// New web
func New(log *log.Log) *Web {
  return &Web{log}
}

// Web struct
type Web struct {
  l *log.Log
}

