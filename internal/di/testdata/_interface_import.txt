# TODO: We'd need a custom search path to find log.Log in web/. I'm not sure
# this usecase is useful right now, so we'll skip it until we find a usecase.

-- input.json --
{
  "dependencies": [
    {
      "import": "myapp.com/web",
      "type": "Log"
    }
  ],
  "externals": [
  ],
  "target": "myapp.com/gen/web"
}

-- expect.txt --
&web.Web{m: web.Middleware{
  v: "v",
}}

-- main.go --
package main

import (
  "os"
  "fmt"
  "github.com/hexops/valast"
  genweb "myapp.com/gen/web"
)

func main() {
  actual := genweb.Load()
  fmt.Fprintf(os.Stdout, "%s\n", valast.String(actual))
}

-- go.mod --
module myapp.com

require (
  github.com/hexops/valast v1.4.1
)

-- log/log.go --
package log

type Log interface {
  Info(s string)
}

func New() *log {
  return &log{}
}

type log struct {
}

func (l *log) Info(s string) {}

func Default() Log {
  return &log{}
}

-- web/web.go --
package web

import (
  "myapp.com/log"
)

func Log() log.Log {
  return log.New()
}
